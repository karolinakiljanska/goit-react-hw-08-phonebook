{"version":3,"file":"static/js/793.92a9b62a.chunk.js","mappings":"0PAMaA,EAAgBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kGAiB1BC,IAVaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mJAUVF,EAAAA,EAAAA,GAAOM,EAAAA,EAAPN,CAAcO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iHAEpBM,EAAAA,GAGEC,EAAAA,I,uMCgCxB,EApDqB,WACnB,IAAAC,GAAwBC,EAAAA,EAAAA,UAFT,GAE2BC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEhBI,GAAWC,EAAAA,EAAAA,MAETC,GAAMC,EAAAA,EAAAA,SAAO,IAAIC,MAAOC,UAAYC,KAEpCC,GAAUJ,EAAAA,EAAAA,QACdK,aAAY,WACVT,EAAQU,KAAKC,MAAMR,EAAIS,QAAUP,KAAKQ,OAAS,KACjD,GAAG,MAWL,OATAC,EAAAA,EAAAA,YAAU,WACJf,GAAQ,IACVgB,cAAcP,EAAQI,SACtBX,EAAS,KAEb,GAAG,CAACA,EAAUF,IACdiB,QAAQC,IAAI,QAASlB,GACrBiB,QAAQC,IAAI,WAAYT,IAGtBU,EAAAA,EAAAA,KAAClC,EAAAA,GAAa,CAACmC,MAAO,CAAEC,gBAAgB,OAADC,OAASC,EAAM,MAAMC,UAC1DC,EAAAA,EAAAA,MAAA,OACEL,MAAO,CACLM,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,gBAAiB,QACjBC,QAAS,OACTC,UAAW,oCACXR,SAAA,EAEFC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEL,EAAAA,EAAAA,KAACc,EAAAA,IAAO,IAAG,oBACXR,EAAAA,EAAAA,MAACnC,EAAAA,GAAI,CAAC4C,GAAG,IAAId,MAAO,CAAEe,eAAgB,QAASX,SAAA,CAC5C,IAAI,qBAGPL,EAAAA,EAAAA,KAACc,EAAAA,IAAO,QAGVR,EAAAA,EAAAA,MAAA,KAAGL,MAAO,CAAEgB,UAAW,SAAUC,UAAW,QAASb,SAAA,EACnDL,EAAAA,EAAAA,KAACmB,EAAAA,IAAU,IAAG,kBAAAhB,OACKtB,EAAI,aACvBmB,EAAAA,EAAAA,KAACmB,EAAAA,IAAU,WAKrB,C","sources":["GlobalStyles.styled.jsx","components/views/NotFound/NotFound.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from '@mui/material';\nimport { secondColor, buttonColor } from 'components/AppMainStyled.styled';\n\nexport const ViewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #4b4e62;\n  transition: 800ms;\n  :hover {\n    text-decoration: underline;\n    color: black;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  min-width: 100px;\n  background-color: ${buttonColor};\n  &:hover,\n  :focus {\n    background-color: ${secondColor};\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ViewContainer } from 'GlobalStyles.styled';\nimport { BiTimeFive, BiError } from 'react-icons/bi';\nimport HomeBG from '../../../images/contacts-bg.jpg';\n\nconst setTimer = 5;\nconst NotFoundView = () => {\n  const [time, setTime] = useState(setTimer);\n\n  let navigate = useNavigate();\n\n  const ref = useRef(new Date().getTime() + setTimer * 1000);\n\n  const timerId = useRef(\n    setInterval(() => {\n      setTime(Math.ceil((ref.current - Date.now()) / 1000));\n    }, 1000)\n  );\n  useEffect(() => {\n    if (time <= 0) {\n      clearInterval(timerId.current);\n      navigate('/');\n    }\n  }, [navigate, time]);\n  console.log('time:', time);\n  console.log('timerId:', timerId);\n\n  return (\n    <ViewContainer style={{ backgroundImage: `url(${HomeBG})` }}>\n      <div\n        style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          backgroundColor: 'wheat',\n          padding: '50px',\n          boxShadow: '2px 4px 8px 0px rgba(0,0,0,0.75)',\n        }}\n      >\n        <p>\n          <BiError /> Page not found,\n          <Link to=\"/\" style={{ textDecoration: 'none' }}>\n            {' '}\n            go to homepage\n          </Link>\n          <BiError />\n        </p>\n\n        <p style={{ textAlign: 'center', marginTop: '10px' }}>\n          <BiTimeFive />\n          {`Redirecting in ${time} seconds`}\n          <BiTimeFive />\n        </p>\n      </div>\n    </ViewContainer>\n  );\n};\nexport default NotFoundView;\n"],"names":["ViewContainer","styled","_templateObject","_taggedTemplateLiteral","StyledButton","Link","_templateObject2","Button","_templateObject3","buttonColor","secondColor","_useState","useState","_useState2","_slicedToArray","time","setTime","navigate","useNavigate","ref","useRef","Date","getTime","setTimer","timerId","setInterval","Math","ceil","current","now","useEffect","clearInterval","console","log","_jsx","style","backgroundImage","concat","HomeBG","children","_jsxs","position","top","left","transform","backgroundColor","padding","boxShadow","BiError","to","textDecoration","textAlign","marginTop","BiTimeFive"],"sourceRoot":""}
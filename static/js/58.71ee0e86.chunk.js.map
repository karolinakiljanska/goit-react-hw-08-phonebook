{"version":3,"file":"static/js/58.71ee0e86.chunk.js","mappings":"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","sources":["GlobalStyles.styled.jsx","components/Contacts/PhoneBook.styled.jsx","components/Contacts/components/Contacts/Contacts.styled.jsx","components/Contacts/components/ContactItem/ContactItem.styled.jsx","components/Contacts/components/Modal/Modal.styled.jsx","components/Contacts/components/Button/Button.Styled.jsx","components/Contacts/components/Form/Form.styled.jsx","components/Contacts/components/Form/Form.jsx","components/Contacts/components/Modal/Modal.jsx","components/Contacts/components/ContactItem/ContactItem.jsx","components/Contacts/components/Contacts/Contacts.jsx","components/Contacts/components/Filter/Filter.styled.jsx","components/Contacts/components/Filter/Filter.jsx","components/Contacts/components/NavBar/NavBar.styled.jsx","components/Contacts/components/NavBar/NavBar.jsx","components/Contacts/PhoneBook.js","utils/utils.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from '@mui/material';\nimport { secondColor, buttonColor } from 'components/AppMainStyled.styled';\n\nexport const ViewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #4b4e62;\n  transition: 800ms;\n  :hover {\n    text-decoration: underline;\n    color: black;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  min-width: 100px;\n  background-color: ${buttonColor};\n  &:hover,\n  :focus {\n    background-color: ${secondColor};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { bgColor } from 'components/AppMainStyled.styled';\nexport const Container = styled.div`\n  width: 100vw;\n  padding-bottom: 2vh;\n  padding-top: 2vh;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${bgColor};\n  color: white;\n  height: 100vh;\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContList = styled.ul`\n  width: 480px;\n  overflow-y: scroll;\n  margin: 10px 10px;\n  border: 1px solid wheat;\n  border-radius: 6px;\n`;\n","import styled from '@emotion/styled';\n\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { MdDeleteOutline, MdAutoDelete } from 'react-icons/md';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  margin-top: 10px;\n  transition: 500ms;\n  border-radius: 4px;\n  justify-content: space-between;\n  padding-left: 20px;\n  padding-right: 20px;\n  /* padding-right: 5px; */\n  outline: none;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(204, 204, 204, 0.65);\n  }\n\n  &.vissible {\n    background-color: rgba(204, 204, 204, 0.45);\n    transition: 500ms;\n  }\n`;\nexport const TextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 65%;\n`;\nexport const StyledButton = styled.button`\n  display: block;\n  width: 70px;\n  margin-left: 5px;\n  background-color: transparent;\n  border-color: transparent;\n  border-radius: 6px;\n  color: transparent;\n  transition: 500ms;\n  visibility: hidden;\n  &[disabled] {\n    border-color: gray !important;\n    background-color: #f5deb385 !important;\n  }\n  &.show {\n    visibility: visible;\n    transition: 500ms;\n    background-color: #726885;\n    color: wheat;\n    border-color: black;\n\n    &:hover,\n    :focus {\n      background-color: #7f7197;\n      color: white;\n      border-color: wheat;\n    }\n  }\n`;\nexport const DeleteIcon = styled(AiFillDelete)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n  border-radius: 50%;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const EditIcon = styled(FaUserEdit)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const PreDeleteIcon = styled(MdDeleteOutline)`\n  height: 22px;\n  width: 22px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const PreEditIcon = styled(AiFillEdit)`\n  height: 25px;\n  width: 25px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const DeleteOnLoadIcon = styled(MdAutoDelete)`\n  height: 25px;\n  width: 25px;\n  fill: #fff;\n  margin-right: 35px;\n`;\n","import styled from '@emotion/styled';\n\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0%;\n  right: 0%;\n  left: 0%;\n  bottom: 0%;\n  background-color: #2c2732df;\n  z-index: 1;\n  overflow: hidden;\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\n  display: block;\n  width: 120px;\n  margin-top: 10px;\n  background-color: #726885;\n  border-radius: 6px;\n  color: wheat;\n  transition: 350ms;\n  &:hover,\n  :focus {\n    background-color: #7f7197;\n    color: white;\n    border-color: wheat;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { StyledButton } from 'components/Contacts/components/Button/Button.Styled';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  border: 1px solid wheat;\n  border-radius: 6px;\n  padding: 20px;\n`;\nexport const Item = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  border-radius: 6px;\n  background-color: wheat;\n`;\n\nexport const FormBox = styled.div`\n  /* position: relative; */\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CloseButton = styled(StyledButton)`\n  width: 30px;\n  position: absolute;\n  top: -5px;\n  right: 5px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  StyledForm,\n  Item,\n  FormBox,\n  CloseButton,\n} from 'components/Contacts/components/Form/Form.styled';\nimport { StyledButton } from 'components/Contacts/components/Button/Button.Styled';\nimport { notify, isContactDubled, schema } from 'utils/utils';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n\nimport { useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\n\nexport const MyForm = ({\n  mutator,\n  initialFormValues,\n  btn1,\n  btn2,\n  id,\n  name,\n}) => {\n  const dispatch = useDispatch();\n\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (\n      (isContactDubled(contacts, values, 'name') ||\n        isContactDubled(contacts, values, 'number')) &&\n      name === 'AddContact'\n    ) {\n      notify();\n      return;\n    }\n    try {\n      await mutator({ id, ...values });\n      resetForm();\n      dispatch(selector(false));\n    } catch (error) {\n      console.log(error);\n      dispatch(selector(false));\n    }\n  };\n\n  return (\n    <FormBox>\n      <ToastContainer />\n      <Formik\n        initialValues={initialFormValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ handleReset }) => (\n          <StyledForm>\n            <label htmlFor=\"\">\n              Name\n              <Item type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" />\n            </label>\n            <label htmlFor=\"\">\n              Number\n              <Item type=\"tel\" name=\"number\" />\n              <ErrorMessage name=\"number\" />\n            </label>\n            <StyledButton type=\"submit\">{btn1}</StyledButton>\n            <StyledButton type=\"button\" onClick={() => handleReset()}>\n              {btn2}\n            </StyledButton>\n          </StyledForm>\n        )}\n      </Formik>\n      <CloseButton onClick={e => dispatch(selector(false))}>\n        &times;\n      </CloseButton>\n    </FormBox>\n  );\n};\n\nMyForm.propTypes = {\n  values: PropTypes.object,\n  contacts: PropTypes.array,\n  mutator: PropTypes.func,\n  initialFormValues: PropTypes.object,\n  btn1: PropTypes.string,\n  btn2: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n","import { BackDrop } from './Modal.styled';\nimport {\n  useEditContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/createApi';\nimport { MyForm } from 'components/Contacts/components/Form/Form';\nimport PropTypes from 'prop-types';\n\nexport const Modal = ({ id }) => {\n  const [editContact, { isLoading }] = useEditContactMutation();\n  const { data: contacts = [] } = useGetContactsQuery();\n  const contact = contacts.find(c => c.id === id);\n\n  isLoading && document.querySelector('body').classList.remove('fixed');\n  return (\n    <>\n      <BackDrop>\n        {contact && (\n          <MyForm\n            mutator={editContact}\n            initialFormValues={{ name: contact.name, number: contact.number }}\n            btn1=\"Edit Contact\"\n            btn2=\"Reload Data\"\n            id={contact.id}\n            name=\"Edit Contact\"\n          />\n        )}\n      </BackDrop>\n    </>\n  );\n};\n\nMyForm.propTypes = {\n  id: PropTypes.string,\n};\n","import {\n  StyledItem,\n  TextBox,\n  DeleteIcon,\n  EditIcon,\n  PreDeleteIcon,\n  PreEditIcon,\n  DeleteOnLoadIcon,\n} from './ContactItem.styled';\n\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/createApi';\n\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { selector, contactId } from 'redux/contacts/modalSlice';\nimport { Modal } from 'components/Contacts/components/Modal/Modal';\nimport { useSelector } from 'react-redux';\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number, id } = contact;\n  const [show, setShow] = useState(false);\n\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const dispatch = useDispatch();\n  const modalSelector = useSelector(state => state.modal.selector);\n  const modalIdSelector = useSelector(state => state.modal.contactId);\n\n  const onEnter = e => {\n    e.currentTarget.classList.add('vissible');\n    e.currentTarget.id === contact.id && setShow(true);\n  };\n\n  const handleDelete = e => {\n    deleteContact(e.currentTarget.parentElement.id);\n  };\n\n  const handleEdit = e => {\n    const id = e.currentTarget.parentElement.id;\n    dispatch(selector('edit'));\n    dispatch(contactId(id));\n\n    document.querySelector('body').classList.add('fixed');\n  };\n  const onBlur = e => {\n    document\n      .querySelectorAll('.vissible')\n      .forEach(n => n.classList.remove('vissible'));\n    setShow(false);\n  };\n\n  return (\n    <>\n      <StyledItem\n        id={id}\n        onClick={onEnter}\n        onFocus={onEnter}\n        onBlur={onBlur}\n        tabIndex={1}\n      >\n        <TextBox>\n          <span>{name}</span>\n          <span>{number}</span>\n        </TextBox>\n        {isLoading ? (\n          <DeleteOnLoadIcon />\n        ) : show ? (\n          <DeleteIcon onClick={handleDelete} />\n        ) : (\n          <PreDeleteIcon />\n        )}\n        {!isLoading &&\n          (show ? <EditIcon onClick={handleEdit} /> : <PreEditIcon />)}\n      </StyledItem>\n      {modalSelector === 'edit' && id === modalIdSelector && (\n        <Modal id={id}></Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.prototype = {\n  filteredContacts: PropTypes.array,\n  contacts: PropTypes.array,\n  modalSelector: PropTypes.string,\n  modalIdSelector: PropTypes.number,\n};\n","import { StyledContList } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n\nimport PropTypes from 'prop-types';\nimport { ContactItem } from 'components/Contacts/components/ContactItem/ContactItem';\nimport { useMemo } from 'react';\n\nexport const Contacts = () => {\n  const filter = useSelector(getFilter);\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(contact => {\n      return contact.name\n        .toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase());\n    });\n  }, [contacts, filter]);\n\n  const shownContacts = filter !== '' ? filteredContacts : contacts;\n\n  return (\n    <StyledContList>\n      {shownContacts.map(contact => {\n        return <ContactItem contact={contact} key={contact.id} />;\n      })}\n    </StyledContList>\n  );\n};\n\nContacts.prototype = {\n  filteredContacts: PropTypes.array,\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const StyledImput = styled.input`\n  margin-left: 10px;\n  border-radius: 6px;\n  background-color: wheat;\n`;\n","import { StyledLabel, StyledImput } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const inputHandler = e => {\n    const { value } = e.currentTarget;\n    dispatch(filterContact(value));\n  };\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <>\n      {contacts?.length !== 0 ? (\n        <>\n          <h2>Contacts:</h2>\n          <StyledLabel>\n            Find my contacts by name\n            <StyledImput type=\"text\" name=\"filter\" onChange={inputHandler} />\n          </StyledLabel>\n        </>\n      ) : (\n        <h2>Contact list is empty:</h2>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\nexport const PhoneBookHeader = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const PhoneBookBox = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useCreateContactMutation } from 'redux/contacts/createApi';\nimport { BackDrop } from 'components/Contacts/components/Modal/Modal.styled';\nimport { PhoneBookHeader, PhoneBookBox } from './NavBar.styled';\nimport { MyForm } from 'components/Contacts/components/Form/Form.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\n\nimport { RiUserAddLine } from 'react-icons/ri';\nimport { StyledButton } from '../../../../GlobalStyles.styled';\n\nexport const NavBar = () => {\n  const modalSelector = useSelector(state => state.modal.selector);\n  const dispatch = useDispatch();\n  const [addContact] = useCreateContactMutation();\n\n  const addContactModal = e => {\n    dispatch(selector('add'));\n  };\n\n  return (\n    <PhoneBookBox>\n      <PhoneBookHeader>Phonebook</PhoneBookHeader>\n      {!modalSelector && (\n        <StyledButton\n          variant=\"contained\"\n          endIcon={<RiUserAddLine />}\n          color=\"primary\"\n          onClick={addContactModal}\n        >\n          Add Contact\n        </StyledButton>\n      )}\n      {modalSelector === 'add' && (\n        <BackDrop>\n          <MyForm\n            mutator={addContact}\n            initialFormValues={{ name: '', number: '' }}\n            btn1=\"Add Contact\"\n            btn2=\"Clear Form\"\n            name=\"AddContact\"\n          />\n        </BackDrop>\n      )}\n    </PhoneBookBox>\n  );\n};\n\nMyForm.propTypes = {\n  modalSelector: PropTypes.string,\n};\n","import './PhoneBook.styled.jsx';\nimport { Container } from 'components/Contacts/PhoneBook.styled';\nimport { Contacts } from 'components/Contacts/components/Contacts/Contacts.jsx';\nimport { Filter } from 'components/Contacts/components/Filter/Filter.jsx';\nimport { NavBar } from 'components/Contacts/components/NavBar/NavBar.jsx';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst PhoneBook = () => {\n  return (\n    <Container>\n      <NavBar />\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n};\nexport default PhoneBook;\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n// export const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; //name must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; //password must contain 1-19 symbols (A-Z,a-z,0-9)\n"],"names":["ViewContainer","styled","_templateObject","_taggedTemplateLiteral","StyledButton","Link","_templateObject2","Button","_templateObject3","buttonColor","secondColor","Container","bgColor","StyledContList","StyledItem","TextBox","DeleteIcon","AiFillDelete","_templateObject4","EditIcon","FaUserEdit","_templateObject5","PreDeleteIcon","MdDeleteOutline","_templateObject6","PreEditIcon","AiFillEdit","_templateObject7","DeleteOnLoadIcon","MdAutoDelete","_templateObject8","BackDrop","StyledForm","Form","Item","Field","FormBox","CloseButton","MyForm","_ref","mutator","initialFormValues","btn1","btn2","id","name","dispatch","useDispatch","_useGetContactsQuery$","useGetContactsQuery","data","contacts","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","resetForm","wrap","_context","prev","next","isContactDubled","notify","abrupt","_objectSpread","selector","t0","console","log","stop","_x","_x2","apply","arguments","_jsxs","children","_jsx","ToastContainer","Formik","initialValues","onSubmit","validationSchema","schema","_ref4","handleReset","htmlFor","type","ErrorMessage","onClick","e","Modal","_useEditContactMutati","useEditContactMutation","_useEditContactMutati2","_slicedToArray","editContact","isLoading","contact","find","c","document","querySelector","classList","remove","_Fragment","number","propTypes","PropTypes","ContactItem","_useState","useState","_useState2","show","setShow","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","modalSelector","useSelector","state","modal","modalIdSelector","contactId","onEnter","currentTarget","add","onFocus","onBlur","querySelectorAll","forEach","n","tabIndex","parentElement","prototype","filteredContacts","Contacts","filter","getFilter","useMemo","toLocaleLowerCase","includes","shownContacts","map","StyledLabel","StyledImput","Filter","length","onChange","value","filterContact","PhoneBookHeader","PhoneBookBox","NavBar","_useCreateContactMuta","useCreateContactMutation","addContact","variant","endIcon","RiUserAddLine","color","toast","position","autoClose","arr","key","some","yup","shape","matches","required","max","emailRegexp","nameRegexp","passwordRegexp"],"sourceRoot":""}
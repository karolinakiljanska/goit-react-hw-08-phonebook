{"version":3,"file":"static/js/270.25fb2e6d.chunk.js","mappings":"kXAmBA,SAASA,EAAUC,GACjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFN,GAAK,IAAAO,SAAA,CAER,mBACDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACJ,MAAM,UAAUK,KAAK,mBAAkBH,SAAC,iBAEtC,KACP,IAAII,MAAOC,cACX,OAGP,CAEA,IAAMC,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IAAU,IAADC,EAC/BC,GAA6BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAASF,EAAA,GAAEG,EAAOH,EAAA,GACzBI,GAA+BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCE,EAAUD,EAAA,GAAEE,EAAQF,EAAA,GAC3BG,GAAqCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAAaD,EAAA,GAAEE,EAAWF,EAAA,GACjCG,GAAkCb,EAAAA,EAAAA,YAAUc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAoCjB,EAAAA,EAAAA,YAAUkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAvCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0CrB,EAAAA,EAAAA,YAAUsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA7CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,cAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACL,SAATD,GAAmBzB,EAAQ0B,GAClB,UAATD,GAAoBrB,EAASsB,GACpB,aAATD,GAAuBjB,EAAYkB,EACrC,EAEMC,EAAa,SAAAL,GACjB,IAAAM,EAAwBN,EAAEE,cAAlBC,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MACd,GAAa,SAATD,EAAiB,CACnB,IAAII,EAAU,IAAIC,OAAOC,EAAAA,IAAYC,KAAKN,IACzCG,GAAWjB,EAAa,gDACzBiB,GAAWjB,EAAa,KAC1B,CACA,GAAa,UAATa,EAAkB,CACpB,IAAIQ,EAAW,IAAIH,OAAOI,EAAAA,IAAaF,KAAKN,IAC3CO,GAAYjB,EAAc,wBAC3BiB,GAAYjB,EAAc,KAC5B,CAEA,GAAa,aAATS,EAAqB,CACvB,IAAIU,EAAc,IAAIL,OAAOM,EAAAA,IAAgBJ,KAAKN,IACjDS,GACCf,EAAiB,oDACnBe,GAAef,EAAiB,KAClC,CACF,EACMiB,GAAWC,EAAAA,EAAAA,MAejB,OACEpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAa,CAAChD,MAAOA,EAAMN,UAC1BN,EAAAA,EAAAA,MAAC6D,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIzD,SAAA,EACvCC,EAAAA,EAAAA,KAACyD,EAAAA,GAAW,KACZhE,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZhE,SAAA,EAEFC,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmBnE,UAC9CC,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,OAEnBnE,EAAAA,EAAAA,KAACN,EAAAA,EAAU,CAAC6D,UAAU,KAAK3D,QAAQ,KAAIG,SAAC,aAGxCN,EAAAA,EAAAA,MAACiE,EAAAA,EAAG,CACFH,UAAU,OACVa,YAAU,EACVC,SAnCW,SAAAC,GACnBA,EAAMC,iBACN,IAAAC,EAAkCF,EAAMhC,cAAcmC,SAA9ClC,EAAIiC,EAAJjC,KAAMmC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAEfC,EAAO,CACXrC,KAAMA,EAAKC,MACXkC,MAAOA,EAAMlC,MACbmC,SAAUA,EAASnC,OAGrBW,EAAS0B,EAAAA,GAAwBD,IACjCN,EAAMhC,cAAcwC,OACtB,EAwBUnB,GAAI,CAAEoB,GAAI,GAAIhF,SAAA,EAEdN,EAAAA,EAAAA,MAACuF,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEnF,SAAA,EACzBC,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrF,UAChBC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACRC,MAAOC,QAAQ9D,GACf+D,WAAY/D,EACZgE,aAAa,aACblD,KAAK,OACLmD,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,EACTvD,MAAO3B,EACPmF,SAAU7D,EACV8D,OAAQxD,OAIZzC,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrF,UAChBC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACRC,MAAOC,QAAQ1D,GACf2D,WAAY3D,EACZ8D,UAAQ,EACRC,WAAS,EACTE,MAAM,gBACND,GAAG,QACHH,KAAK,QACLnD,KAAK,QACLkD,aAAa,QACbO,SAAU7D,EACVK,MAAOvB,EACPgF,OAAQxD,OAGZzC,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrF,UAChBC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACRC,MAAOC,QAAQtD,GACfuD,WAAYvD,EACZ0D,UAAQ,EACRC,WAAS,EACTrD,KAAK,WACLuD,MAAM,WACNJ,KAAK,WACLG,GAAG,WACHJ,aAAa,eACbO,SAAU7D,EACVK,MAAOnB,EACP4E,OAAQxD,UAIdzC,EAAAA,EAAAA,KAACkG,EAAAA,EAAM,CACLR,KAAK,SACLE,WAAS,EACThG,QAAQ,YACRuG,SAAUZ,QAA+B,QAAxB/E,EAAW,OAAVqB,QAAU,IAAVA,EAAAA,EAAcJ,SAAS,IAAAjB,EAAAA,EAAIyB,GAC7C0B,GAAI,CAAEoB,GAAI,EAAGqB,GAAI,GAAIrG,SACtB,aAGDC,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CAACC,WAAS,EAACoB,eAAe,WAAUtG,UACvCC,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CAACG,MAAI,EAAApF,UACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAK,oCAAoCN,QAAQ,QAAOG,SAAC,gDAOvEC,EAAAA,EAAAA,KAACT,EAAS,CAACoE,GAAI,CAAEoB,GAAI,SAI7B,CC1LA,IAGA,EAHqB,WACnB,OAAO/E,EAAAA,EAAAA,KAACO,EAAM,GAChB,C,wMCAa+F,EAAS,WAAH,OACjBC,EAAAA,GAAAA,KAAW,oCAAqC,CAC9CC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,KACV,EAEQC,EAAkB,SAACC,EAAK/B,EAAMgC,GACzC,OAAOD,EAAIE,MACT,SAAAC,GAAO,OACLA,EAAQF,GAAKG,sBAAwBnC,EAAKgC,GAAKG,mBAAmB,GAExE,EAKaC,EAASC,EAAAA,KAAaC,MAAM,CACvC3E,KAAM0E,EAAAA,KAAaE,QAFF,yHAEsB,qBAAqBxB,WAC5DyB,OAAQH,EAAAA,KAELE,QANH,kFAMwB,6BACrBE,IAAI,IACJ1B,aAKQ3C,EAAc,8CAEdH,EAAa,+BAEbK,EAAiB,8B","sources":["components/SingUp/SignUp.js","components/views/RegisterView/RegisterView.jsx","utils/utils.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\n\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\n\nimport * as authOperations from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport { emailRegexp, nameRegexp, passwordRegexp } from 'utils/utils';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const [nameField, setName] = useState('');\n  const [emailField, setEmail] = useState('');\n  const [passwordField, setPassword] = useState('');\n  const [nameError, setNameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'email' && setEmail(value);\n    name === 'password' && setPassword(value);\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      let regName = new RegExp(nameRegexp).test(value);\n      !regName && setNameError('name must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regName && setNameError(null);\n    }\n    if (name === 'email') {\n      let regEmail = new RegExp(emailRegexp).test(value);\n      !regEmail && setEmailError('Invalid email format');\n      regEmail && setEmailError(null);\n    }\n\n    if (name === 'password') {\n      let regPassword = new RegExp(passwordRegexp).test(value);\n      !regPassword &&\n        setPasswordError('password must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regPassword && setPasswordError(null);\n    }\n  };\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = event.currentTarget.elements;\n\n    const data = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(authOperations.register(data));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(nameError)}\n                  helperText={nameError}\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  value={nameField}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(emailError)}\n                  helperText={emailError}\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  id=\"email\"\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                  value={emailField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(passwordError)}\n                  helperText={passwordError}\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                  value={passwordField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={Boolean(emailError ?? nameError ?? passwordError)}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/goit-react-hw-08-phonebook/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import SignUp from 'components/SingUp/SignUp';\nconst RegisterView = () => {\n  return <SignUp />;\n};\nexport default RegisterView;\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n// export const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; //name must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; //password must contain 1-19 symbols (A-Z,a-z,0-9)\n"],"names":["Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","Date","getFullYear","theme","createTheme","SignUp","_ref","_useState","useState","_useState2","_slicedToArray","nameField","setName","_useState3","_useState4","emailField","setEmail","_useState5","_useState6","passwordField","setPassword","_useState7","_useState8","nameError","setNameError","_useState9","_useState10","emailError","setEmailError","_useState11","_useState12","passwordError","setPasswordError","handleChange","e","_e$currentTarget","currentTarget","name","value","handleBlur","_e$currentTarget2","regName","RegExp","nameRegexp","test","regEmail","emailRegexp","regPassword","passwordRegexp","dispatch","useDispatch","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","noValidate","onSubmit","event","preventDefault","_event$currentTarget$","elements","email","password","data","authOperations","reset","mt","Grid","container","spacing","item","xs","TextField","error","Boolean","helperText","autoComplete","type","required","fullWidth","id","label","autoFocus","onChange","onBlur","Button","disabled","mb","justifyContent","notify","toast","position","autoClose","isContactDubled","arr","key","some","contact","toLocaleLowerCase","schema","yup","shape","matches","number","max"],"sourceRoot":""}